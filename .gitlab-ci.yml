variables:
  NETWORK_NAME: "equipmentmanager-network"
  CONTAINER_NAME: "equipment-manager"
  IMAGE_NAME: "equipment-manager-image-$CI_COMMIT_BRANCH"
  ENVIRONMENT_NAME: "$CI_COMMIT_BRANCH"
  DOCKER_TLS_CERTDIR: ""


stages:
  - build
  - deploy

.script_setup:
  login:
    - &login docker login -u $AZURE_USERNAME -p $AZURE_PASSWORD $AZURE_REGISTRY

build-staging:
  variables:
    DOCKER_HOST: tcp://docker:2375
  stage: build
  image: docker:20.10.17
  services:
    - docker:20.10-dind
  rules:
    - if: '$CI_COMMIT_BRANCH == "staging"'
  before_script:
    - *login
  script:
    - docker build . -t $IMAGE_NAME
    - docker tag $IMAGE_NAME $AZURE_REGISTRY/$IMAGE_NAME
    - docker push $AZURE_REGISTRY/$IMAGE_NAME
  tags:
    - ah1-docker

deploy-staging:
  stage: deploy
  variables:
    GIT_STRATEGY: clone
  environment:
    name: staging deploy
    url: http://10.14.41.118/
  rules:
    - if: '$CI_COMMIT_BRANCH == "staging"'
  before_script:
    - *login
  script:
    - docker pull $AZURE_REGISTRY/$IMAGE_NAME
    - docker stop $CONTAINER_NAME || true
    - docker rm $CONTAINER_NAME || true
    - docker create --name $CONTAINER_NAME -p 10074:10074 $AZURE_REGISTRY/$IMAGE_NAME
    - docker network connect $NETWORK_NAME $CONTAINER_NAME
    - docker start $CONTAINER_NAME
  tags:
    - ah1-shell
